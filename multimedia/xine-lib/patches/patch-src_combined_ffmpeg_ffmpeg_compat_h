$OpenBSD: patch-src_combined_ffmpeg_ffmpeg_compat_h,v 1.7 2022/01/25 18:10:36 sthen Exp $

ffmpeg 4 compatibility attempt.
4e5ad7ebed6111ba9e1ea2eab4a6b94477b066a8

Index: src/combined/ffmpeg/ffmpeg_compat.h
--- src/combined/ffmpeg/ffmpeg_compat.h.orig
+++ src/combined/ffmpeg/ffmpeg_compat.h
@@ -130,6 +130,14 @@
 #  define XFF_PALETTE 3
 #endif
 
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,0,100) /** << revise this */
+#  define XFF_VAAPI 1 /** << libavcodec/vaapi.h */
+#else
+#  define XFF_VAAPI 2 /** << libavutil/hwcontext.h, libavutil/hwcontext_vaapi.h */
+#endif
+
+
+
 #if LIBAVUTIL_VERSION_INT >= XFF_INT_VERSION(52,0,0)
 #  define PIX_FMT_NONE      AV_PIX_FMT_NONE
 #  define PIX_FMT_YUV420P   AV_PIX_FMT_YUV420P
@@ -138,7 +146,6 @@
 #  define PIX_FMT_YUVJ444P  AV_PIX_FMT_YUVJ444P
 #  define PIX_FMT_YUV410P   AV_PIX_FMT_YUV410P
 #  define PIX_FMT_YUV411P   AV_PIX_FMT_YUV411P
-#  define PIX_FMT_VAAPI_VLD AV_PIX_FMT_VAAPI_VLD
 #  define PIX_FMT_ARGB      AV_PIX_FMT_ARGB
 #  define PIX_FMT_BGRA      AV_PIX_FMT_BGRA
 #  define PIX_FMT_RGB24     AV_PIX_FMT_RGB24
@@ -150,8 +157,17 @@
 #  define PIX_FMT_PAL8      AV_PIX_FMT_PAL8
 #  define PixelFormat       AVPixelFormat
 /* video_out/video_out_vaapi */
-#  define PIX_FMT_VAAPI_IDCT AV_PIX_FMT_VAAPI_IDCT
-#  define PIX_FMT_VAAPI_MOCO AV_PIX_FMT_VAAPI_MOCO
+#  if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,0,100) /** << revise this */
+#    define PIX_FMT_VAAPI_VLD AV_PIX_FMT_VAAPI_VLD
+#    define PIX_FMT_VAAPI_IDCT AV_PIX_FMT_VAAPI_IDCT
+#    define PIX_FMT_VAAPI_MOCO AV_PIX_FMT_VAAPI_MOCO
+#  else
+#    define PIX_FMT_VAAPI_VLD AV_PIX_FMT_VAAPI
+#    define PIX_FMT_VAAPI_IDCT AV_PIX_FMT_VAAPI
+#    define PIX_FMT_VAAPI_MOCO AV_PIX_FMT_VAAPI
+#  endif
+
+#  define CODEC_FLAG_BITEXACT AV_CODEC_FLAG_BITEXACT
 #endif
 
 #if LIBAVCODEC_VERSION_INT >= XFF_INT_VERSION(54,25,0)
@@ -188,6 +204,18 @@
 #  define XFF_AV_BUFFER 1
 #endif
 
+/* 0 (no), 1 (yes), 2 (deprecated but still needed to make direct rendering work) */
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,0,100)
+#  define XFF_THREAD_SAFE_CB 0
+#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,0,100)
+#  define XFF_THREAD_SAFE_CB 1
+#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(60,0,0)
+#  define XFF_THREAD_SAFE_CB 2
+#else
+/* now callbacks shall always be thread safe. */
+#  define XFF_THREAD_SAFE_CB 0
+#endif
+
 /* function aliases */
 
 #if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(52,66,0)
@@ -235,9 +263,17 @@
 #endif
 
 #if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(57,12,100)
-#define XFF_PACKET_UNREF av_free_packet
+#  define XFF_PACKET_DECL(_p) AVPacket _p##_stat, *_p
+#  define XFF_PACKET_NEW(_p) _p = &_p##_stat, av_init_packet (_p)
+#  define XFF_PACKET_UNREF(_p) av_free_packet (_p)
+#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,0,100) /** << revise this */
+#  define XFF_PACKET_DECL(_p) AVPacket _p##_stat, *_p
+#  define XFF_PACKET_NEW(_p) _p = &_p##_stat, av_init_packet (_p)
+#  define XFF_PACKET_UNREF(_p) av_packet_unref (_p)
 #else
-#define XFF_PACKET_UNREF av_packet_unref
+#  define XFF_PACKET_DECL(_p) AVPacket *_p
+#  define XFF_PACKET_NEW(_p) _p = av_packet_alloc ()
+#  define XFF_PACKET_UNREF(_p) av_packet_free (&(_p))
 #endif
 
 #ifndef AV_INPUT_BUFFER_PADDING_SIZE
