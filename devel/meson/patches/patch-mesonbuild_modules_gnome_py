$OpenBSD: patch-mesonbuild_modules_gnome_py,v 1.8 2021/10/31 07:20:45 ajacoutot Exp $

From ae35b1f45ac5850547f2db52b7b50a54789fcca1 Mon Sep 17 00:00:00 2001
From: Dylan Baker <dylan@pnwbakers.com>
Date: Wed, 27 Oct 2021 11:02:04 -0700
Subject: [PATCH] modules/gnome: ensure that `install_dir` is set

From b7a3457765409a645686cba70a366ae11b3e9078 Mon Sep 17 00:00:00 2001
From: Dylan Baker <dylan@pnwbakers.com>
Date: Thu, 28 Oct 2021 10:53:26 -0700
Subject: [PATCH] modules/gnome: fix missing install_dir, again, harder

From c8ea5dfe8adc01c32c6f88dfeed13f15a659929f Mon Sep 17 00:00:00 2001
From: Dylan Baker <dylan@pnwbakers.com>
Date: Thu, 28 Oct 2021 11:46:18 -0700
Subject: [PATCH] modules/gnome: use `install_dir = []` instead of false

Index: mesonbuild/modules/gnome.py
--- mesonbuild/modules/gnome.py.orig
+++ mesonbuild/modules/gnome.py
@@ -278,18 +278,20 @@ class GnomeModule(ExtensionModule):
         if install_header and not export:
             raise MesonException('GResource header is installed yet export is not enabled')
 
-        kwargs['input'] = args[1]
-        kwargs['output'] = output
-        kwargs['depends'] = depends
+        c_kwargs = kwargs.copy()
+        c_kwargs['input'] = args[1]
+        c_kwargs['output'] = output
+        c_kwargs['depends'] = depends
+        c_kwargs.setdefault('install_dir', [])
         if not mesonlib.version_compare(glib_version, gresource_dep_needed_version):
             # This will eventually go out of sync if dependencies are added
-            kwargs['depend_files'] = depend_files
-            kwargs['command'] = cmd
+            c_kwargs['depend_files'] = depend_files
+            c_kwargs['command'] = cmd
         else:
             depfile = f'{output}.d'
-            kwargs['depfile'] = depfile
-            kwargs['command'] = copy.copy(cmd) + ['--dependency-file', '@DEPFILE@']
-        target_c = GResourceTarget(name, state.subdir, state.subproject, kwargs)
+            c_kwargs['depfile'] = depfile
+            c_kwargs['command'] = copy.copy(cmd) + ['--dependency-file', '@DEPFILE@']
+        target_c = GResourceTarget(name, state.subdir, state.subproject, c_kwargs)
 
         if gresource: # Only one target for .gresource files
             return ModuleReturnValue(target_c, [target_c])
@@ -1434,13 +1436,16 @@ class GnomeModule(ExtensionModule):
             # so --template consumes it.
             h_cmd = cmd + ['--template', '@INPUT@']
             h_sources = [h_template] + sources
-            custom_kwargs['install'] = install_header
-            if 'install_dir' not in custom_kwargs:
-                custom_kwargs['install_dir'] = \
+
+            # Copy so we don't mutate the arguments for the c_template
+            h_kwargs = custom_kwargs.copy()
+            h_kwargs['install'] = install_header
+            if 'install_dir' not in h_kwargs:
+                h_kwargs['install_dir'] = \
                     state.environment.coredata.get_option(mesonlib.OptionKey('includedir'))
             h_target = self._make_mkenum_custom_target(state, h_sources,
                                                        h_output, h_cmd,
-                                                       custom_kwargs)
+                                                       h_kwargs)
             targets.append(h_target)
 
         if c_template is not None:
@@ -1449,16 +1454,19 @@ class GnomeModule(ExtensionModule):
             # so --template consumes it.
             c_cmd = cmd + ['--template', '@INPUT@']
             c_sources = [c_template] + sources
+
+            c_kwargs = custom_kwargs.copy()
             # Never install the C file. Complain on bug tracker if you need it.
-            custom_kwargs['install'] = False
+            c_kwargs['install'] = False
+            c_kwargs['install_dir'] = []
             if h_template is not None:
                 if 'depends' in custom_kwargs:
-                    custom_kwargs['depends'] += [h_target]
+                    c_kwargs['depends'] += [h_target]
                 else:
-                    custom_kwargs['depends'] = h_target
+                    c_kwargs['depends'] = h_target
             c_target = self._make_mkenum_custom_target(state, c_sources,
                                                        c_output, c_cmd,
-                                                       custom_kwargs)
+                                                       c_kwargs)
             targets.insert(0, c_target)
 
         if c_template is None and h_template is None:
