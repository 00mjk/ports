$OpenBSD: patch-src_hotspot_cpu_aarch64_assembler_aarch64_hpp,v 1.1 2021/11/02 16:03:06 kurt Exp $

Backport Address constructors to support varying definitions
of uint64_t, int64_t, uintptr_t and intptr_t without causing
implicit conversion errors or ambiguous call to overloaded
function errors.

Index: src/hotspot/cpu/aarch64/assembler_aarch64.hpp
--- src/hotspot/cpu/aarch64/assembler_aarch64.hpp.orig
+++ src/hotspot/cpu/aarch64/assembler_aarch64.hpp
@@ -380,9 +380,15 @@ class Address {
     : _base(r), _index(noreg), _offset(0), _mode(base_plus_offset), _target(0) { }
   Address(Register r, int o)
     : _base(r), _index(noreg), _offset(o), _mode(base_plus_offset), _target(0) { }
-  Address(Register r, int64_t o)
+  Address(Register r, long o)
     : _base(r), _index(noreg), _offset(o), _mode(base_plus_offset), _target(0) { }
-  Address(Register r, uint64_t o)
+  Address(Register r, long long o)
+    : _base(r), _index(noreg), _offset(o), _mode(base_plus_offset), _target(0) { }
+  Address(Register r, unsigned int o)
+    : _base(r), _index(noreg), _offset(o), _mode(base_plus_offset), _target(0) { }
+  Address(Register r, unsigned long o)
+    : _base(r), _index(noreg), _offset(o), _mode(base_plus_offset), _target(0) { }
+  Address(Register r, unsigned long long o)
     : _base(r), _index(noreg), _offset(o), _mode(base_plus_offset), _target(0) { }
 #ifdef ASSERT
   Address(Register r, ByteSize disp)
