$OpenBSD: patch-lib_CodeGen_SelectionDAG_DAGCombiner_cpp,v 1.5 2020/08/10 11:38:43 jca Exp $

When the DAG truncates an ISD::ADDE node, DAGCombiner may optimize it by making
an adde with smaller operands. PowerPC has i1 registers, and may truncate an
i32 adde to i1, but an i1 adde is not legal for PowerPC, and the legalize-ops
phase can't fix it. This was causing "fatal error: error in backend: Cannot
select..." -- from base-clang

Index: lib/CodeGen/SelectionDAG/DAGCombiner.cpp
--- lib/CodeGen/SelectionDAG/DAGCombiner.cpp.orig
+++ lib/CodeGen/SelectionDAG/DAGCombiner.cpp
@@ -10983,6 +10983,7 @@ SDValue DAGCombiner::visitTRUNCATE(SDNode *N) {
   // (trunc adde(X, Y, Carry)) -> (adde trunc(X), trunc(Y), Carry)
   // (trunc addcarry(X, Y, Carry)) -> (addcarry trunc(X), trunc(Y), Carry)
   // When the adde's carry is not used.
+  // Don't make an illegal adde: LegalizeDAG can't expand nor promote it.
   if ((N0.getOpcode() == ISD::ADDE || N0.getOpcode() == ISD::ADDCARRY) &&
       N0.hasOneUse() && !N0.getNode()->hasAnyUseOfValue(1) &&
       // We only do for addcarry before legalize operation
