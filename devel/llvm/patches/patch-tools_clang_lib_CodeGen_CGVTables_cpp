$OpenBSD: patch-tools_clang_lib_CodeGen_CGVTables_cpp,v 1.1 2020/08/07 11:42:02 jca Exp $

backport llvm 10.0.1 fix for net/libtorrent-rasterbar. see:
https://bugs.llvm.org/show_bug.cgi?id=43814

commit 68cd4f72beae67a9bdbc11c85fd745dec8fc0999
from: Reid Kleckner <rnk@google.com>
date: Mon Apr 13 17:34:45 2020 UTC
via: tstellar <tstellar@redhat.com>

Use FinishThunk to finish musttail thunks

FinishThunk, and the invariant of setting and then unsetting
CurCodeDecl, was added in 7f416cc42638 (2015). The invariant didn't
exist when I added this musttail codepath in ab2090d10765 (2014).
Recently in 28328c3771, I started using this codepath on non-Windows
platforms, and users reported problems during release testing (PR44987).

The issue was already present for users of EH on i686-windows-msvc, so I
added a test for that case as well.

Reviewed By: hans

Differential Revision: https://reviews.llvm.org/D76444

(cherry picked from commit ce5173c0e174870934d1b3a026f631d996136191)

Index: tools/clang/lib/CodeGen/CGVTables.cpp
--- tools/clang/lib/CodeGen/CGVTables.cpp.orig
+++ tools/clang/lib/CodeGen/CGVTables.cpp
@@ -437,7 +437,8 @@ void CodeGenFunction::EmitMustTailThunk(GlobalDecl GD,
   // Finish the function to maintain CodeGenFunction invariants.
   // FIXME: Don't emit unreachable code.
   EmitBlock(createBasicBlock());
-  FinishFunction();
+
+  FinishThunk();
 }
 
 void CodeGenFunction::generateThunk(llvm::Function *Fn,
@@ -564,7 +565,7 @@ llvm::Constant *CodeGenVTables::maybeEmitThunk(GlobalD
   CGM.SetLLVMFunctionAttributesForDefinition(GD.getDecl(), ThunkFn);
 
   // Thunks for variadic methods are special because in general variadic
-  // arguments cannot be perferctly forwarded. In the general case, clang
+  // arguments cannot be perfectly forwarded. In the general case, clang
   // implements such thunks by cloning the original function body. However, for
   // thunks with no return adjustment on targets that support musttail, we can
   // use musttail to perfectly forward the variadic arguments.
